Pasted-Operator-Owner-Trustee-View-full-economics-subs-challenge-fees-SaaS-incentives-shares-et-1757664466613_1757664466613.txt
Operator / Owner / Trustee View

(full economics: subs, challenge fees, SaaS, incentives, shares, etc.)

üëÄ Player View

only shows what they can win + how cheap it is vs leagues, not backend splits.

And you want the player pricing cheaper than leagues:

Competitor: $40 one-time + $10 per week ‚Üí about $80/month.

Your Action Ladder: needs to undercut that, but still leave margin.

1. Player Pricing Plan (cheaper than leagues)

Let‚Äôs lock in something simple & sustainable:

One-time signup: $30 (save $10 vs $40 league start).

Weekly fee: $8 (save $2 vs $10/week league).

‚û°Ô∏è Effective monthly = ‚âà $62/month (8 weeks = ~$68.8, but ~4.3 weeks = ~$34.4). Still $15‚Äì20 cheaper than leagues.
‚û°Ô∏è If you want super aggressive, make it $7/week = ~$60 total.

2. Player View Function
// playerRevenueView.ts
export interface PlayerRevenueView {
  playerId: string;
  monthlyCost: number; // what they pay
  potentialWinnings: {
    weeklyMiniPrize: number;
    streakBonuses: string[]; // descriptions
    progressMilestones: string[];
    avgMatchWinnings: number;
  };
  comparison: {
    actionLadder: number;
    league: number;
    savings: number;
  };
}

export function getPlayerRevenueView(playerId: string): PlayerRevenueView {
  const leagueMonthly = 40 + (10 * 4); // ‚âà $80
  const actionLadderMonthly = 30 + (8 * 4); // ‚âà $62
  
  return {
    playerId,
    monthlyCost: actionLadderMonthly,
    potentialWinnings: {
      weeklyMiniPrize: 50, // $50 weekly pot
      streakBonuses: [
        "$50 bonus at 5 matches",
        "$100 bonus at 10 matches",
        "$150 bonus at 15 matches",
        "$250 bonus at 20 matches",
      ],
      progressMilestones: [
        "25% climb ‚Üí $25",
        "50% climb ‚Üí $50",
        "75% climb ‚Üí $75",
      ],
      avgMatchWinnings: 60, // example: if they play 5 matches betting $60 each and win
    },
    comparison: {
      actionLadder: actionLadderMonthly,
      league: leagueMonthly,
      savings: leagueMonthly - actionLadderMonthly,
    },
  };
}

3. Operator / Owner / Trustee View

Keep the forecast/actuals module I wrote earlier (forecastRevenue). That‚Äôs your backend, private dashboard. It still handles:

Gifts & Fans

Free months / promo

Bootstrap parity (Owner = Trustees)

Scale (Owner = Operator Subscriptions)

Operators + Trustees see:

Gross inflows, splits, pots, incentives cost

Their own payout

Players only see potential winnings + their cheaper cost (function above).

4. Example (Player side)
{
  "playerId": "p123",
  "monthlyCost": 62,
  "potentialWinnings": {
    "weeklyMiniPrize": 50,
    "streakBonuses": [
      "$50 bonus at 5 matches",
      "$100 bonus at 10 matches",
      "$150 bonus at 15 matches",
      "$250 bonus at 20 matches"
    ],
    "progressMilestones": [
      "25% climb ‚Üí $25",
      "50% climb ‚Üí $50",
      "75% climb ‚Üí $75"
    ],
    "avgMatchWinnings": 60
  },
  "comparison": {
    "actionLadder": 62,
    "league": 80,
    "savings": 18
  }
}