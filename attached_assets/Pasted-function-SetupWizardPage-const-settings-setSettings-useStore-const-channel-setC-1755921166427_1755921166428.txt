function SetupWizardPage(){
  const { settings, setSettings } = useStore();
  const [channel, setChannel] = React.useState(settings.featureChannel || "mvp");
  function save(){
    setSettings({ ...settings, featureChannel: channel });
    alert("Saved release channel.");
  }
  return (
    <div className="space-y-4 text-sm">
      <h2 className="text-2xl font-bold">⚙️ MVP Setup Wizard</h2>

      <div className="rounded-2xl border p-4">
        <div className="font-semibold mb-1">MVP you can charge for</div>
        <ul className="list-disc pl-5 space-y-1">
          <li>Player + Operator accounts (email login).</li>
          <li>Ladder + Matches (create, report score, dispute flow).</li>
          <li>Money tracking (bets/fees), operator cut, exportable payouts.</li>
          <li>Activity rules (2 matches/month) & anti-ducking timers.</li>
          <li>Basic analytics (players, matches, revenue).</li>
          <li>Payments: Stripe Checkout for subs/fees + optional Cash App QR.</li>
          <li>Branding per pool hall (logo, colors, name).</li>
          <li>Extras (streams, walk-ins, jackpots, Swiss) → v1.1+ unless trivial.</li>
        </ul>

        <div className="mt-2 text-xs text-muted-foreground">Release channel:</div>
        <div className="flex gap-3 mt-1">
          <label className="flex items-center gap-2">
            <input type="radio" checked={channel==="mvp"} onChange={()=>setChannel("mvp")} /> v1.0 MVP
          </label>
          <label className="flex items-center gap-2">
            <input type="radio" checked={channel==="plus"} onChange={()=>setChannel("plus")} /> v1.1+ Extras
          </label>
          <button className="ml-auto px-3 py-2 rounded-xl border" onClick={save}>Save</button>
        </div>
      </div>

      <div className="rounded-2xl border p-4">
        <div className="font-semibold mb-1">Infra quickstart</div>
        <ol className="list-decimal pl-5 space-y-1">
          <li>Replit full-stack (Next.js/Node). Init git & first commit.</li>
          <li>Supabase (Postgres + Auth). Add keys in Secrets.</li>
          <li>Stripe Checkout. Webhook writes to payments.</li>
          <li>Tenant routing via <code>/t/&#123;slug&#125;</code>; branding per hall.</li>
          <li>Deploy; custom domain; observability & backups.</li>
        </ol>
        <div className="text-xs mt-2">Never store live secrets in front-end state. Use server env.</div>
      </div>
    </div>
  );
}
