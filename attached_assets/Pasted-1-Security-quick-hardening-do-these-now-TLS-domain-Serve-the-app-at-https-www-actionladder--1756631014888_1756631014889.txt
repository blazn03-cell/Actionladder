1) Security quick-hardening (do these now)

TLS / domain

Serve the app at https://www.actionladder.net
 (or your replit.app subdomain) with a valid cert.

In Replit → Domains, verify www.actionladder.net as a CNAME to your app and set it Primary.

Redirect apex actionladder.net → https://www.actionladder.net at your registrar (URL forward or ALIAS).

Express security (server.js)

import helmet from "helmet";
import cors from "cors";
import rateLimit from "express-rate-limit";

app.set("trust proxy", 1); // Replit/Proxies
app.use(helmet({
  contentSecurityPolicy: false, // enable later with your exact script origins
  crossOriginEmbedderPolicy: false
}));
app.use(cors({
  origin: ["https://www.actionladder.net"], // or your replit.app domain during testing
  credentials: true
}));
app.use(rateLimit({ windowMs: 60_000, max: 300 })); // 300 req/min per IP
// HSTS (only after HTTPS works)
app.use((req,res,next)=>{ res.setHeader("Strict-Transport-Security","max-age=31536000; includeSubDomains; preload"); next(); });

// Cookies / sessions (if you use them)
const sessionOpts = { /* your store */, cookie: { secure: true, httpOnly: true, sameSite:"lax" } };


Stripe

Verify webhook signatures (you already do).

Keep secret keys & whsec only in server secrets (never ship to client).

Use idempotency for webhooks (store event.id).

Auth

Prefer JWT or DB-backed sessions (no in-memory sessions on Autoscale).

Hash passwords with bcrypt/argon2. Require 2FA for Owner/Operator.

App

Sanitize inputs (Prisma parameterization is fine; also escape user-generated HTML).

Set Cache-Control: no-store on sensitive endpoints.

Limit upload sizes; validate file types.

2) Fix the navbar overflow (so users can reach all tabs)
Option A — Make the bar horizontally scrollable (fastest)

Add overflow-x on the nav container + prevent wrapping.

React/Tailwind example

<nav className="sticky top-0 z-50 bg-[#0d1f12]/80 backdrop-blur">
  <div className="px-4">
    {/* brand row here */}
  </div>

  {/* SCROLLABLE STRIP */}
  <div className="overflow-x-auto no-scrollbar">
    <ul className="inline-flex gap-4 px-4 py-2 whitespace-nowrap">
      <li><a href="/dashboard" className="hover:opacity-80">Dashboard</a></li>
      <li><a href="/ladder">Ladder</a></li>
      <li><a href="/rookies">Rookie Section</a></li>
      <li><a href="/escrow">Escrow Challenges</a></li>
      <li><a href="/halls">Hall Battles</a></li>
      <li><a href="/standings">League Standings</a></li>
      <li><a href="/qr">QR Registration</a></li>
      <li><a href="/posters">Poster Generator</a></li>
      <li><a href="/live">Live Stream</a></li>
      <li><a href="/ai">AI Features</a></li>
      <li><a href="/operator">Operator Settings</a></li>
      <li><a href="/ads">Ads</a></li>
    </ul>
  </div>
</nav>


CSS (optional)

.no-scrollbar::-webkit-scrollbar{ display:none; }
.no-scrollbar{ -ms-overflow-style:none; scrollbar-width:none; }


If it still doesn’t scroll, something above is likely forcing overflow:hidden;. Remove overflow:hidden from the page wrapper/body; keep it only on specific components.

Option B — Collapse extra items into a “More ▾” menu (clean UX)

Keep ~6 items visible; overflow goes into a dropdown.

const items = ["Dashboard","Ladder","Rookie Section","Escrow Challenges","Hall Battles","League Standings","QR Registration","Poster Generator","Live Stream","AI Features","Operator Settings","Ads"];
const visible = items.slice(0,6);
const extra = items.slice(6);

<ul className="hidden md:flex gap-4">
  {visible.map(i => <li key={i}><a href={to(i)}>{i}</a></li>)}
  <li className="relative group">
    <button>More ▾</button>
    <div className="absolute right-0 mt-2 w-56 rounded-xl border bg-[#0e2215] shadow-lg hidden group-hover:block">
      {extra.map(i => (
        <a key={i} className="block px-4 py-2 hover:bg-white/5" href={to(i)}>{i}</a>
      ))}
    </div>
  </li>
</ul>

{/* Mobile hamburger */}
<button className="md:hidden" onClick={()=>setOpen(v=>!v)}>☰</button>
{open && (
  <div className="md:hidden px-4 py-2 space-y-2">
    {items.map(i => <a key={i} className="block py-2" href={to(i)}>{i}</a>)}
  </div>
)}


Helper:

function to(label){ return "/"+label.toLowerCase().replaceAll(" ","-"); }

3) Quick visual polish (optional)

Add left/right fade to hint scroll:

<div className="relative">
  <div className="pointer-events-none absolute left-0 top-0 h-full w-8 bg-gradient-to-r from-[#0d1f12]"></div>
  <div className="pointer-events-none absolute right-0 top-0 h-full w-8 bg-gradient-to-l from-[#0d1f12]"></div>
  <div className="overflow-x-auto ..."> ... </div>
</div>

4) Sanity checks

Lock icon shows on https? ✅

/healthz returns ok on both your app and webhook VM? ✅

Webhook events in Stripe show 2xx? ✅

Top bar scrolls on mobile and desktop (trackpad swipe/shift+wheel)? ✅