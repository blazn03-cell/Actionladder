function setHallPrice(hallId, key, value) {
  db.prepare(`
    INSERT INTO hall_pricing (hall_id, key, value)
    VALUES (?, ?, ?)
    ON CONFLICT(hall_id, key) DO UPDATE SET value=excluded.value
  `).run(hallId, key, String(value));
}

function getHallPrice(hallId, key) {
  const r = db.prepare("SELECT value FROM hall_pricing WHERE hall_id=? AND key=?").get(hallId, key);
  return r ? r.value : null;
}

function setHallSetting(hallId, { revenue_split_pct }) {
  const exists = db.prepare("SELECT hall_id FROM hall_settings WHERE hall_id=?").get(hallId);
  const pct = (revenue_split_pct == null ? null : Number(revenue_split_pct));
  if (exists) {
    db.prepare("UPDATE hall_settings SET revenue_split_pct=?, updated_at=strftime('%s','now') WHERE hall_id=?")
      .run(pct, hallId);
  } else {
    db.prepare("INSERT INTO hall_settings (hall_id, revenue_split_pct) VALUES (?, ?)").run(hallId, pct);
  }
}
function getHallSetting(hallId) {
  const r = db.prepare("SELECT * FROM hall_settings WHERE hall_id=?").get(hallId);
  return r || null;
}

/* WAITLIST */
function addToWaitlist({ tournamentId, userId }) {
  // Avoid duplicates if already waiting/offered
  const existing = db.prepare(`
    SELECT * FROM tournament_waitlist
    WHERE tournament_id=? AND user_id=? AND status IN ('waiting','offered')
  `).get(tournamentId, userId);
  if (existing) return existing;
  const info = db.prepare(`
    INSERT INTO tournament_waitlist (tournament_id, user_id)
    VALUES (?, ?)
  `).run(tournamentId, userId);
  return db.prepare("SELECT * FROM tournament_waitlist WHERE id=?").get(info.lastInsertRowid);
}
function listWaitlist(tournamentId) {
  return db.prepare(`
    SELECT * FROM tournament_waitlist
    WHERE tournament_id=?
    ORDER BY created_at ASC
  `).all(tournamentId);
}
function nextWaitlistRow(tournamentId) {
  return db.prepare(`
    SELECT * FROM tournament_waitlist
    WHERE tournament_id=? AND status='waiting'
    ORDER BY created_at ASC LIMIT 1
  `).get(tournamentId);
}
function markWaitlistOffered(id, { url, expiresAt }) {
  db.prepare("UPDATE tournament_waitlist SET status='offered', offer_url=?, offer_expires_at=? WHERE id=?")
    .run(url || null, expiresAt || null, id);
}
function markWaitlistConverted(id) {
  db.prepare("UPDATE tournament_waitlist SET status='converted' WHERE id=?").run(id);
}
function cancelWaitlist(id) {
  db.prepare("UPDATE tournament_waitlist SET status='canceled' WHERE id=?").run(id);
}
