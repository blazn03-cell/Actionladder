Action Ladder – Player & Admin Revenue Dashboard (mockup)
· typescript
import React, { useMemo, useState } from "react";
                <option value="bootstrap">Bootstrap (Owner = Trustees)</option>
            <label className="flex flex-col gap-1">Gifted %
              <input type="number" className="border rounded-xl px-3 py-2" defaultValue={forecast.params.giftedPct} onChange={(e)=> setGiftedPct(Number(e.target.value || 0))}/>
            </label>
            <label className="flex flex-col gap-1">Comped %
              <input type="number" className="border rounded-xl px-3 py-2" defaultValue={forecast.params.compedPct} onChange={(e)=> setCompedPct(Number(e.target.value || 0))}/>
            </label>
            <label className="flex flex-col gap-1">Fan Tips $/player
              <input type="number" className="border rounded-xl px-3 py-2" step="0.5" defaultValue={forecast.params.fanTipsPerPlayer} onChange={(e)=> setFanTipsPerPlayer(Number(e.target.value || 0))}/>
            </label>
            <label className="flex flex-col gap-1">Operator SaaS $/hall
              <input type="number" className="border rounded-xl px-3 py-2" step="10" defaultValue={forecast.params.operatorPlan} onChange={(e)=> setOperatorPlan(Number(e.target.value || 0))}/>
            </label>
          </div>
        </div>
      </div>


      <div className="rounded-2xl p-6 bg-white shadow-sm border border-slate-200">
        <div className="flex items-center justify-between mb-3">
          <h3 className="text-lg font-semibold flex items-center gap-2"><Eye className="w-5 h-5"/> Private Outflows & Splits</h3>
        </div>
        <ResponsiveContainer width="100%" height={260}>
          <BarChart data={bars}>
            <CartesianGrid strokeDasharray="3 3" />
            <XAxis dataKey="name" />
            <YAxis />
            <Tooltip />
            <Bar dataKey="value" />
          </BarChart>
        </ResponsiveContainer>
        <div className="grid md:grid-cols-3 gap-4 mt-4">
          <Stat label="Operators (share)" value={dollars(f.operatorPayouts)} icon={Users} privateBadge />
          <Stat label="Trustees (share)" value={dollars(f.trusteePayouts)} icon={Users} privateBadge />
          <Stat label="Owner" value={dollars(f.ownerPayouts)} icon={Shield} privateBadge />
        </div>
      </div>
    </div>
  );
}


// ---------- Shell ----------
export default function ActionLadderDashboard() {
  const [role, setRole] = useState<"player" | "admin">("player");


  return (
    <div className="min-h-screen bg-gradient-to-b from-slate-50 to-slate-100 text-slate-900 p-6">
      <div className="max-w-6xl mx-auto space-y-6">
        <header className="flex items-center justify-between">
          <div>
            <h1 className="text-2xl md:text-3xl font-bold tracking-tight">Action Ladder Dashboard</h1>
            <p className="text-slate-600 text-sm">Cheaper than leagues, bigger upside for players. Private backend for operators/owner/trustees.</p>
          </div>
          <div className="flex items-center gap-2">
            <span className="text-sm text-slate-600">View as</span>
            <select className="border rounded-xl px-3 py-2 bg-white" value={role} onChange={(e)=> setRole(e.target.value as any)}>
              <option value="player">Player</option>
              <option value="admin">Admin (Private)</option>
            </select>
          </div>
        </header>


        {role === "player" ? <PlayerView/> : <AdminView/>}


        <footer className="pt-8 text-xs text-slate-500">
          <div className="flex items-center gap-2"><Shield className="w-4 h-4"/> Backend economics are restricted to owner/trustees/operators. Players only see pricing and potential winnings.</div>
        </footer>
      </div>
    </div>
  );
}