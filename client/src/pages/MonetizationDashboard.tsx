import { useState, useEffect } from \"react\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { SafeText, SafeHeading } from \"@/components/SafeText\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { AlertTriangle, DollarSign, Shield, Users, TrendingUp } from \"lucide-react\";\n\ninterface MembershipTier {\n  id: string;\n  name: string;\n  price: number;\n  monthlyPrice: number;\n  commissionRate: number;\n  perks: string[];\n  description: string;\n}\n\ninterface Commission {\n  originalAmount: number;\n  commissionRate: number;\n  calculatedCommission: number;\n  roundedCommission: number;\n  actionLadderShare: number;\n  operatorShare: number;\n  bonusFundShare: number;\n  prizePool: number;\n}\n\ninterface SuspicionAnalysis {\n  playerId: string;\n  suspicionScore: number;\n  shouldReview: boolean;\n  shouldLock: boolean;\n  shouldAutoPromote: boolean;\n  triggers: string[];\n  recommendedActions: string[];\n}\n\nexport default function MonetizationDashboard() {\n  const [tiers, setTiers] = useState<MembershipTier[]>([]);\n  const [loading, setLoading] = useState(true);\n  \n  // Commission Calculator\n  const [commissionAmount, setCommissionAmount] = useState(100);\n  const [commissionTier, setCommissionTier] = useState(\"none\");\n  const [commission, setCommission] = useState<Commission | null>(null);\n  \n  // Anti-Sandbagging\n  const [playerId, setPlayerId] = useState(\"player-123\");\n  const [suspicionAnalysis, setSuspicionAnalysis] = useState<SuspicionAnalysis | null>(null);\n  \n  // Revenue Split\n  const [revenueAmount, setRevenueAmount] = useState(100);\n  const [revenueSplit, setRevenueSplit] = useState<any>(null);\n\n  useEffect(() => {\n    loadPricingData();\n  }, []);\n\n  const loadPricingData = async () => {\n    try {\n      const response = await apiRequest(\"GET\", \"/api/pricing/tiers\");\n      setTiers(response.tiers);\n    } catch (error) {\n      console.error(\"Failed to load pricing data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateCommission = async () => {\n    try {\n      const response = await apiRequest(\"POST\", \"/api/pricing/calculate-commission\", {\n        amount: commissionAmount * 100, // Convert to cents\n        membershipTier: commissionTier,\n      });\n      setCommission(response);\n    } catch (error) {\n      console.error(\"Failed to calculate commission:\", error);\n    }\n  };\n\n  const analyzeSandbagging = async () => {\n    try {\n      const metrics = {\n        playerId,\n        winStreakVsHigher: 7,\n        totalGamesVsHigher: 10,\n        breakRunPercent: 45,\n        averageBreakRunPercent: 25,\n        rackDifferentialAvg: 4.2,\n        suddenRatingDrops: 2,\n        operatorFlags: 1,\n        peerReports: 0,\n        currentTier: \"rookie\",\n        totalMatches: 50,\n      };\n      \n      const response = await apiRequest(\"POST\", \"/api/fair-play/analyze-player\", {\n        playerId,\n        metrics,\n      });\n      setSuspicionAnalysis(response);\n    } catch (error) {\n      console.error(\"Failed to analyze sandbagging:\", error);\n    }\n  };\n\n  const calculateRevenueSplit = async () => {\n    try {\n      const response = await apiRequest(\"POST\", \"/api/revenue/calculate-split\", {\n        amount: revenueAmount * 100,\n        transactionType: \"challenge_fee\",\n        membershipTier: \"basic\",\n        operatorTier: \"basic_hall\",\n      });\n      setRevenueSplit(response);\n    } catch (error) {\n      console.error(\"Failed to calculate revenue split:\", error);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-black flex items-center justify-center\">\n        <div className=\"animate-spin w-8 h-8 border-4 border-green-500 border-t-transparent rounded-full\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        {/* Header */}\n        <div className=\"text-center space-y-4\">\n          <SafeHeading level={1} className=\"text-4xl font-bold text-green-400\">\n            Action Ladder Monetization Dashboard\n          </SafeHeading>\n          <p className=\"text-gray-300 text-lg\">\n            <SafeText>Complete revenue management system with anti-sandbagging protection</SafeText>\n          </p>\n        </div>\n\n        <Tabs defaultValue=\"pricing\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-5 bg-gray-900\">\n            <TabsTrigger value=\"pricing\" className=\"data-[state=active]:bg-green-600\">\n              <DollarSign className=\"w-4 h-4 mr-2\" />\n              Pricing Tiers\n            </TabsTrigger>\n            <TabsTrigger value=\"commission\" className=\"data-[state=active]:bg-green-600\">\n              <TrendingUp className=\"w-4 h-4 mr-2\" />\n              Commission\n            </TabsTrigger>\n            <TabsTrigger value=\"fairplay\" className=\"data-[state=active]:bg-green-600\">\n              <Shield className=\"w-4 h-4 mr-2\" />\n              Fair Play\n            </TabsTrigger>\n            <TabsTrigger value=\"revenue\" className=\"data-[state=active]:bg-green-600\">\n              <Users className=\"w-4 h-4 mr-2\" />\n              Revenue Split\n            </TabsTrigger>\n            <TabsTrigger value=\"noshow\" className=\"data-[state=active]:bg-green-600\">\n              <AlertTriangle className=\"w-4 h-4 mr-2\" />\n              No-Show System\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Pricing Tiers Tab */}\n          <TabsContent value=\"pricing\" className=\"space-y-6\">\n            <Card className=\"bg-gray-900 border-gray-800\">\n              <CardHeader>\n                <CardTitle className=\"text-green-400\">\n                  <SafeText>Membership Tiers - \"Cheaper than Leagues\"</SafeText>\n                </CardTitle>\n                <CardDescription>\n                  <SafeText>Competitive pricing vs APA/BCA with progressive commission structure</SafeText>\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  {tiers.map((tier) => (\n                    <Card key={tier.id} className=\"bg-gray-800 border-gray-700\">\n                      <CardHeader>\n                        <CardTitle className=\"text-green-400\">\n                          <SafeText>{tier.name}</SafeText>\n                        </CardTitle>\n                        <div className=\"text-3xl font-bold text-white\">\n                          ${tier.monthlyPrice}/month\n                        </div>\n                        <Badge variant=\"outline\" className=\"border-green-500 text-green-300\">\n                          {tier.commissionRate}% commission\n                        </Badge>\n                      </CardHeader>\n                      <CardContent>\n                        <p className=\"text-gray-300 mb-4\">\n                          <SafeText>{tier.description}</SafeText>\n                        </p>\n                        <div className=\"space-y-2\">\n                          <h4 className=\"font-semibold text-green-400\">Perks:</h4>\n                          {tier.perks.map((perk, index) => (\n                            <div key={index} className=\"text-sm text-gray-300\">\n                              â€¢ <SafeText>{perk.replace(/_/g, ' ')}</SafeText>\n                            </div>\n                          ))}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Commission Calculator Tab */}\n          <TabsContent value=\"commission\" className=\"space-y-6\">\n            <Card className=\"bg-gray-900 border-gray-800\">\n              <CardHeader>\n                <CardTitle className=\"text-green-400\">\n                  <SafeText>Commission Calculator with Round-Up Profit</SafeText>\n                </CardTitle>\n                <CardDescription>\n                  <SafeText>Calculate 5-10% commission with automatic round-up to nearest $1</SafeText>\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div>\n                    <Label htmlFor=\"amount\">Challenge Amount ($)</Label>\n                    <Input\n                      id=\"amount\"\n                      type=\"number\"\n                      value={commissionAmount}\n                      onChange={(e) => setCommissionAmount(Number(e.target.value))}\n                      className=\"bg-gray-800 border-gray-700\"\n                      data-testid=\"input-commission-amount\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"tier\">Membership Tier</Label>\n                    <Select value={commissionTier} onValueChange={setCommissionTier}>\n                      <SelectTrigger className=\"bg-gray-800 border-gray-700\" data-testid=\"select-membership-tier\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"none\">Non-Member (10%)</SelectItem>\n                        <SelectItem value=\"rookie\">Rookie (10%)</SelectItem>\n                        <SelectItem value=\"basic\">Basic (8%)</SelectItem>\n                        <SelectItem value=\"pro\">Pro (5%)</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"flex items-end\">\n                    <Button \n                      onClick={calculateCommission} \n                      className=\"bg-green-600 hover:bg-green-700\"\n                      data-testid=\"button-calculate-commission\"\n                    >\n                      Calculate\n                    </Button>\n                  </div>\n                </div>\n\n                {commission && (\n                  <div className=\"mt-6 p-4 bg-gray-800 rounded-lg\">\n                    <h3 className=\"text-lg font-semibold text-green-400 mb-4\">\n                      <SafeText>Commission Breakdown</SafeText>\n                    </h3>\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                      <div>\n                        <div className=\"text-gray-400\">Original Amount</div>\n                        <div className=\"text-xl font-bold\">${(commission.originalAmount / 100).toFixed(2)}</div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-400\">Commission ({commission.commissionRate / 100}%)</div>\n                        <div className=\"text-xl font-bold text-red-400\">${(commission.roundedCommission / 100).toFixed(2)}</div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-400\">Prize Pool</div>\n                        <div className=\"text-xl font-bold text-green-400\">${(commission.prizePool / 100).toFixed(2)}</div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-400\">Round-Up Profit</div>\n                        <div className=\"text-xl font-bold text-yellow-400\">\n                          ${((commission.roundedCommission - commission.calculatedCommission) / 100).toFixed(2)}\n                        </div>\n                      </div>\n                    </div>\n                    <Separator className=\"my-4 bg-gray-700\" />\n                    <div className=\"grid grid-cols-3 gap-4 text-sm\">\n                      <div>\n                        <div className=\"text-gray-400\">Action Ladder Share</div>\n                        <div className=\"text-lg font-bold text-green-400\">${(commission.actionLadderShare / 100).toFixed(2)}</div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-400\">Operator Share</div>\n                        <div className=\"text-lg font-bold text-blue-400\">${(commission.operatorShare / 100).toFixed(2)}</div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-400\">Bonus Fund</div>\n                        <div className=\"text-lg font-bold text-purple-400\">${(commission.bonusFundShare / 100).toFixed(2)}</div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Fair Play Tab */}\n          <TabsContent value=\"fairplay\" className=\"space-y-6\">\n            <Card className=\"bg-gray-900 border-gray-800\">\n              <CardHeader>\n                <CardTitle className=\"text-green-400\">\n                  <SafeText>Anti-Sandbagging Detection System</SafeText>\n                </CardTitle>\n                <CardDescription>\n                  <SafeText>Advanced suspicion scoring with automatic tier adjustments</SafeText>\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"playerId\">Player ID</Label>\n                    <Input\n                      id=\"playerId\"\n                      value={playerId}\n                      onChange={(e) => setPlayerId(e.target.value)}\n                      className=\"bg-gray-800 border-gray-700\"\n                      data-testid=\"input-player-id\"\n                    />\n                  </div>\n                  <div className=\"flex items-end\">\n                    <Button \n                      onClick={analyzeSandbagging} \n                      className=\"bg-red-600 hover:bg-red-700\"\n                      data-testid=\"button-analyze-sandbagging\"\n                    >\n                      Analyze Player\n                    </Button>\n                  </div>\n                </div>\n\n                {suspicionAnalysis && (\n                  <div className=\"mt-6 p-4 bg-gray-800 rounded-lg\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-lg font-semibold text-green-400\">\n                        <SafeText>Suspicion Analysis</SafeText>\n                      </h3>\n                      <Badge \n                        variant={suspicionAnalysis.shouldLock ? \"destructive\" : suspicionAnalysis.shouldReview ? \"secondary\" : \"default\"}\n                        className={suspicionAnalysis.shouldLock ? \"bg-red-600\" : suspicionAnalysis.shouldReview ? \"bg-yellow-600\" : \"bg-green-600\"}\n                      >\n                        Score: {suspicionAnalysis.suspicionScore.toFixed(1)}/10\n                      </Badge>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                      <div>\n                        <div className=\"text-gray-400\">Should Review</div>\n                        <div className={`text-lg font-bold ${suspicionAnalysis.shouldReview ? 'text-yellow-400' : 'text-green-400'}`}>\n                          {suspicionAnalysis.shouldReview ? 'Yes' : 'No'}\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-400\">Should Lock</div>\n                        <div className={`text-lg font-bold ${suspicionAnalysis.shouldLock ? 'text-red-400' : 'text-green-400'}`}>\n                          {suspicionAnalysis.shouldLock ? 'Yes' : 'No'}\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-400\">Auto-Promote</div>\n                        <div className={`text-lg font-bold ${suspicionAnalysis.shouldAutoPromote ? 'text-blue-400' : 'text-gray-400'}`}>\n                          {suspicionAnalysis.shouldAutoPromote ? 'Yes' : 'No'}\n                        </div>\n                      </div>\n                    </div>\n\n                    {suspicionAnalysis.triggers.length > 0 && (\n                      <div className=\"mb-4\">\n                        <h4 className=\"font-semibold text-red-400 mb-2\">Triggers:</h4>\n                        <div className=\"space-y-1\">\n                          {suspicionAnalysis.triggers.map((trigger, index) => (\n                            <div key={index} className=\"text-sm text-gray-300\">\n                              â€¢ <SafeText>{trigger}</SafeText>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {suspicionAnalysis.recommendedActions.length > 0 && (\n                      <div>\n                        <h4 className=\"font-semibold text-yellow-400 mb-2\">Recommended Actions:</h4>\n                        <div className=\"space-y-1\">\n                          {suspicionAnalysis.recommendedActions.map((action, index) => (\n                            <div key={index} className=\"text-sm text-gray-300\">\n                              â€¢ <SafeText>{action}</SafeText>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Revenue Split Tab */}\n          <TabsContent value=\"revenue\" className=\"space-y-6\">\n            <Card className=\"bg-gray-900 border-gray-800\">\n              <CardHeader>\n                <CardTitle className=\"text-green-400\">\n                  <SafeText>Operator Revenue Sharing</SafeText>\n                </CardTitle>\n                <CardDescription>\n                  <SafeText>Automated revenue distribution with performance bonuses</SafeText>\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"revenueAmount\">Transaction Amount ($)</Label>\n                    <Input\n                      id=\"revenueAmount\"\n                      type=\"number\"\n                      value={revenueAmount}\n                      onChange={(e) => setRevenueAmount(Number(e.target.value))}\n                      className=\"bg-gray-800 border-gray-700\"\n                      data-testid=\"input-revenue-amount\"\n                    />\n                  </div>\n                  <div className=\"flex items-end\">\n                    <Button \n                      onClick={calculateRevenueSplit} \n                      className=\"bg-blue-600 hover:bg-blue-700\"\n                      data-testid=\"button-calculate-revenue\"\n                    >\n                      Calculate Split\n                    </Button>\n                  </div>\n                </div>\n\n                {revenueSplit && (\n                  <div className=\"mt-6 p-4 bg-gray-800 rounded-lg\">\n                    <h3 className=\"text-lg font-semibold text-green-400 mb-4\">\n                      <SafeText>Revenue Distribution</SafeText>\n                    </h3>\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                      <div>\n                        <div className=\"text-gray-400\">Action Ladder</div>\n                        <div className=\"text-xl font-bold text-green-400\">${(revenueSplit.actionLadderShare / 100).toFixed(2)}</div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-400\">Operator Share</div>\n                        <div className=\"text-xl font-bold text-blue-400\">${(revenueSplit.operatorShare / 100).toFixed(2)}</div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-400\">Bonus Fund</div>\n                        <div className=\"text-xl font-bold text-purple-400\">${(revenueSplit.bonusFundShare / 100).toFixed(2)}</div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-400\">Prize Pool</div>\n                        <div className=\"text-xl font-bold text-yellow-400\">${(revenueSplit.prizePoolShare / 100).toFixed(2)}</div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* No-Show System Tab */}\n          <TabsContent value=\"noshow\" className=\"space-y-6\">\n            <Card className=\"bg-gray-900 border-gray-800\">\n              <CardHeader>\n                <CardTitle className=\"text-green-400\">\n                  <SafeText>No-Show Prevention System</SafeText>\n                </CardTitle>\n                <CardDescription>\n                  <SafeText>QR code check-ins, deposit holds, and penalty tracking</SafeText>\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <Card className=\"bg-gray-800 border-gray-700\">\n                    <CardHeader>\n                      <CardTitle className=\"text-yellow-400 text-lg\">\n                        <SafeText>Challenge Holds</SafeText>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-2 text-sm\">\n                        <div>â€¢ Pre-auth challenge fees</div>\n                        <div>â€¢ $10-20 deposit holds</div>\n                        <div>â€¢ 48-hour hold window</div>\n                        <div>â€¢ Auto-forfeit on no-show</div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card className=\"bg-gray-800 border-gray-700\">\n                    <CardHeader>\n                      <CardTitle className=\"text-blue-400 text-lg\">\n                        <SafeText>QR Code Check-In</SafeText>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-2 text-sm\">\n                        <div>â€¢ 10-minute grace period</div>\n                        <div>â€¢ Venue-specific codes</div>\n                        <div>â€¢ Operator verification</div>\n                        <div>â€¢ Auto-payout to present player</div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card className=\"bg-gray-800 border-gray-700\">\n                    <CardHeader>\n                      <CardTitle className=\"text-red-400 text-lg\">\n                        <SafeText>Penalty Ladder</SafeText>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-2 text-sm\">\n                        <div>â€¢ 1st offense: Warning</div>\n                        <div>â€¢ 2nd offense: 30-day suspension</div>\n                        <div>â€¢ 3rd offense: 90-day suspension</div>\n                        <div>â€¢ Repeat offenders: Pro-only</div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n\n        {/* Summary Stats */}\n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardHeader>\n            <CardTitle className=\"text-green-400\">\n              <SafeText>System Overview</SafeText>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 text-center\">\n              <div>\n                <div className=\"text-3xl font-bold text-green-400\">5-10%</div>\n                <div className=\"text-gray-400\">\n                  <SafeText>Commission Rate</SafeText>\n                </div>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-blue-400\">3</div>\n                <div className=\"text-gray-400\">Membership Tiers</div>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-yellow-400\">$20-60</div>\n                <div className=\"text-gray-400\">Monthly Range</div>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-red-400\">24h</div>\n                <div className=\"text-gray-400\">\n                  <SafeText>Review SLA</SafeText>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}